from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.state import State, StatesGroup
from bot.handlers.gigachat_generator import get_gigachat_response
from bot.utils.file_manager import get_one_user_interests
from aiogram.fsm.context import FSMContext


router = Router()


class FeedbackStates(StatesGroup):
    waiting_for_feedback = State()


@router.message(Command("feedback"))
async def feedback_start(message: Message, state: FSMContext):
    user_id = message.from_user.id
    interests = get_one_user_interests(user_id)

    await message.reply(f"–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º–∏ –∏–¥–µ—è–º–∏, –∏ —è –¥–∞–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å. –í–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã: {interests}")
    await state.set_state(FeedbackStates.waiting_for_feedback)


@router.message(FeedbackStates.waiting_for_feedback)
async def feedback_process(message: Message, state: FSMContext):
    user_id = message.from_user.id
    user_input = message.text
    interests = get_one_user_interests(user_id)

    response = get_gigachat_response(
        system_message=f"–¢—ã –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {interests}.",
        user_message=user_input,
    )

    await message.answer(f"üìà –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ –≤–∞—à–µ–π –∏–¥–µ–µ —Å —É—á—ë—Ç–æ–º –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ ({interests}):\n{response}")
    await state.clear()