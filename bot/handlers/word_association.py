from aiogram import Router, F
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message
from aiogram.filters import Command
from bot.handlers.gigachat_generator import get_gigachat_response
from bot.utils.file_manager import get_one_user_interests
from aiogram.fsm.context import FSMContext
router = Router()


class WordAssociationStates(StatesGroup):
    waiting_for_word = State()


@router.message(Command("word_association"))
async def word_association_start(message: Message, state: FSMContext):
    user_id = message.from_user.id
    interests = get_one_user_interests(user_id)

    await message.reply(f"–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ, –∏ —è –ø–æ–¥–±–µ—Ä—É –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏. –í–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã: {interests}")
    await state.set_state(WordAssociationStates.waiting_for_word)


@router.message(WordAssociationStates.waiting_for_word)
async def word_association_process(message: Message, state: FSMContext):
    user_id = message.from_user.id
    user_input = message.text
    interests = get_one_user_interests(user_id)

    response = get_gigachat_response(
        system_message=f"–¢—ã –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {interests}.",
        user_message=user_input,
    )

    await message.answer(f"üîë –ê—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ –ø–æ —Å–ª–æ–≤—É '{user_input}' —Å —É—á—ë—Ç–æ–º –≤–∞—à–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ ({interests}):\n{response}")
    await state.clear()